#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.2.2 LTS"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Cube"
    {
        custom string userProperties:blender:object_name = "Cube"

        def Mesh "Cube" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.020000108, -0.69991195, -0.69991195), (0.020000108, 0.69991195, 0.69991195)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 3, 14, 10, 0, 1, 10, 11, 3, 2, 13, 14, 14, 10, 8, 9, 6, 7, 9, 12, 15, 12, 20, 23, 9, 8, 16, 17, 10, 14, 22, 18, 11, 10, 18, 19, 7, 5, 8, 9, 4, 6, 12, 15, 2, 0, 11, 13, 5, 4, 15, 8, 17, 16, 24, 25, 18, 22, 30, 26, 19, 18, 26, 27, 22, 21, 29, 30, 13, 11, 19, 21, 8, 15, 23, 16, 12, 9, 17, 20, 14, 13, 21, 22, 13, 14, 9, 12, 12, 15, 11, 13, 8, 15, 11, 10, 27, 31, 28, 29, 30, 29, 28, 25, 24, 26, 30, 25, 24, 31, 27, 26, 23, 20, 28, 31, 21, 19, 27, 29, 16, 23, 31, 24, 20, 17, 25, 28]
            rel material:binding = </root/_materials/Material>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 1.5366653e-7, 0), (1, 1.5366653e-7, 0), (1, 1.5366653e-7, 0), (1, 1.5366653e-7, 0), (1, 1.5366653e-7, 0), (1, 1.5366653e-7, 0), (1, 1.5366653e-7, 0), (1, 1.5366653e-7, 0), (-1, -1.5366653e-7, 0), (-1, -1.5366653e-7, 0), (-1, -1.5366653e-7, 0), (-1, -1.5366653e-7, 0), (-1, -1.4991855e-7, 0), (-1, -1.4991855e-7, 0), (-1, -1.4991855e-7, 0), (-1, -1.4991855e-7, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.99999994, 1.5403725e-7, 0), (0.99999994, 1.5403725e-7, 0), (0.99999994, 1.5403725e-7, 0), (0.99999994, 1.5403725e-7, 0), (-0.99999994, -1.5403725e-7, 0), (-0.99999994, -1.5403725e-7, 0), (-0.99999994, -1.5403725e-7, 0), (-0.99999994, -1.5403725e-7, 0), (-1, -1.6108474e-7, 0), (-1, -1.6108474e-7, 0), (-1, -1.6108474e-7, 0), (-1, -1.6108474e-7, 0), (-1, -1.7719321e-7, 0), (-1, -1.7719321e-7, 0), (-1, -1.7719321e-7, 0), (-1, -1.7719321e-7, 0), (-1, -1.5366653e-7, 0), (-1, -1.5366653e-7, 0), (-1, -1.5366653e-7, 0), (-1, -1.5366653e-7, 0), (1, 1.4991855e-7, 0), (1, 1.4991855e-7, 0), (1, 1.4991855e-7, 0), (1, 1.4991855e-7, 0), (1, 1.4991855e-7, 0), (1, 1.4991855e-7, 0), (1, 1.4991855e-7, 0), (1, 1.4991855e-7, 0), (-1, -1.4991855e-7, 0), (-1, -1.4991855e-7, 0), (-1, -1.4991855e-7, 0), (-1, -1.4991855e-7, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.99999994, 1.5403725e-7, 0), (0.99999994, 1.5403725e-7, 0), (0.99999994, 1.5403725e-7, 0), (0.99999994, 1.5403725e-7, 0), (-0.99999994, -1.5403725e-7, 0), (-0.99999994, -1.5403725e-7, 0), (-0.99999994, -1.5403725e-7, 0), (-0.99999994, -1.5403725e-7, 0), (1, 1.7719321e-7, 0), (1, 1.7719321e-7, 0), (1, 1.7719321e-7, 0), (1, 1.7719321e-7, 0), (1, 1.6108474e-7, 0), (1, 1.6108474e-7, 0), (1, 1.6108474e-7, 0), (1, 1.6108474e-7, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.019999921, -0.50000155, 0.50000155), (-0.019999921, -0.50000155, -0.50000155), (-0.020000078, 0.50000155, 0.50000155), (-0.020000078, 0.50000155, -0.50000155), (0.020000078, -0.50000155, 0.50000155), (0.020000078, -0.50000155, -0.50000155), (0.019999921, 0.50000155, 0.50000155), (0.019999921, 0.50000155, -0.50000155), (0.020000078, -0.50000155, -0.50000155), (0.019999921, 0.50000155, -0.50000155), (-0.019999921, -0.50000155, -0.50000155), (-0.019999921, -0.50000155, 0.50000155), (0.019999921, 0.50000155, 0.50000155), (-0.020000078, 0.50000155, 0.50000155), (-0.020000078, 0.50000155, -0.50000155), (0.020000078, -0.50000155, 0.50000155), (0.020000095, -0.61175597, -0.61175597), (0.019999905, 0.61175597, -0.61175597), (-0.019999905, -0.61175597, -0.61175597), (-0.019999905, -0.61175597, 0.61175597), (0.019999905, 0.61175597, 0.61175597), (-0.020000095, 0.61175597, 0.61175597), (-0.020000095, 0.61175597, -0.61175597), (0.020000095, -0.61175597, 0.61175597), (0.020000108, -0.69991195, -0.69991195), (0.019999892, 0.69991195, -0.69991195), (-0.019999892, -0.69991195, -0.69991195), (-0.019999892, -0.69991195, 0.69991195), (0.019999892, 0.69991195, 0.69991195), (-0.020000108, 0.69991195, 0.69991195), (-0.020000108, 0.69991195, -0.69991195), (0.020000108, -0.69991195, 0.69991195)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:st = [(0.375, 0.5), (0.375, 0.75), (0.375, 0.75), (0.375, 0.5), (0.625, 0.5), (0.375, 0.5), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.625, 0.75), (0.375, 0.75), (0.375, 0.75), (0.375, 0.5), (0.375, 0.25), (0.375, 0), (0.625, 0), (0.375, 0), (0.375, 0), (0.625, 0), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.375, 0), (0.375, 0.25), (0.375, 0.25), (0.375, 0), (0.375, 0.5), (0.375, 0.75), (0.375, 0.75), (0.375, 0.5), (0.625, 0.5), (0.375, 0.5), (0.375, 0.5), (0.625, 0.5), (0.375, 0), (0.375, 0.25), (0.375, 0.25), (0.375, 0), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.375, 0.25), (0.625, 0.25), (0.625, 0.25), (0.375, 0.25), (0.375, 0), (0.375, 0.25), (0.375, 0.25), (0.375, 0), (0.375, 0.5), (0.375, 0.75), (0.375, 0.75), (0.375, 0.5), (0.625, 0.5), (0.375, 0.5), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.625, 0.75), (0.375, 0.75), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.375, 0.25), (0.625, 0.25), (0.625, 0.25), (0.375, 0.25), (0.625, 0), (0.375, 0), (0.375, 0), (0.625, 0), (0.375, 0.75), (0.625, 0.75), (0.625, 0.75), (0.375, 0.75), (0.625, 0.75), (0.375, 0.75), (0.375, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.5), (0.625, 0.75), (0.375, 0.25), (0.625, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.5), (0.875, 0.5), (0.875, 0.75), (0.625, 0.75), (0.375, 0.75), (0.625, 0.75), (0.625, 1), (0.375, 1), (0.125, 0.5), (0.375, 0.5), (0.375, 0.75), (0.125, 0.75), (0.375, 0.25), (0.625, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.375, 0.25), (0.625, 0.25), (0.625, 0.25), (0.375, 0.25), (0.625, 0), (0.375, 0), (0.375, 0), (0.625, 0)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            custom string userProperties:blender:data_name = "Cube"
        }
    }

    def Scope "_materials"
    {
        def Material "Material"
        {
            token outputs:surface.connect = </root/_materials/Material/Principled_BSDF.outputs:surface>
            custom string userProperties:blender:data_name = "Material"

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.45
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }
    }
}

